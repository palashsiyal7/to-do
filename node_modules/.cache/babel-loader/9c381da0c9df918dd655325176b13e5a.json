{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeLL\\\\Desktop\\\\new\\\\new-todo\\\\src\\\\components\\\\ListItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListItem(_ref) {\n  _s();\n  let {\n    todo,\n    id,\n    checkComplete,\n    handleEditTodos\n  } = _ref;\n  const [onEdit, setOnEdit] = useState(false);\n  const [editValue, setEditValue] = useState(todo.name);\n  const handleOnEdit = () => {\n    setOnEdit(true);\n  };\n  const handleSave = id => {\n    setOnEdit(false);\n    if (editValue) {\n      handleEditTodos(editValue, id);\n    } else {\n      setEditValue(todo.name);\n    }\n  };\n  if (onEdit) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"editValue\",\n        value: editValue,\n        name: \"editValue\",\n        onChange: e => setEditValue(e.target.value.toLowerCase())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSave(id),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: id,\n        className: todo.complete ? \"active\" : \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: id,\n          checked: todo.complete,\n          onChange: () => checkComplete(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), todo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: todo.complete,\n        onClick: handleOnEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(ListItem, \"lZB8jNT4Pjt+2MldzkqJ8eFVhDA=\");\n_c = ListItem;\nvar _c;\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"names":["React","useState","ListItem","todo","id","checkComplete","handleEditTodos","onEdit","setOnEdit","editValue","setEditValue","name","handleOnEdit","handleSave","e","target","value","toLowerCase","complete"],"sources":["C:/Users/DeLL/Desktop/new/new-todo/src/components/ListItem.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function ListItem({ todo, id, checkComplete, handleEditTodos }) {\r\n    const [onEdit, setOnEdit] = useState(false)\r\n    const [editValue, setEditValue] = useState(todo.name)\r\n\r\n    const handleOnEdit = () => {\r\n        setOnEdit(true)\r\n    }\r\n\r\n    const handleSave = id => {\r\n        setOnEdit(false)\r\n        if (editValue) {\r\n            handleEditTodos(editValue, id)\r\n        } else {\r\n            setEditValue(todo.name)\r\n        }\r\n    }\r\n\r\n    if (onEdit) {\r\n        return (\r\n            <li>\r\n                <input type=\"text\" id=\"editValue\" value={editValue}\r\n                    name=\"editValue\"\r\n                    onChange={e => setEditValue(e.target.value.toLowerCase())} />\r\n\r\n                <button onClick={() => handleSave(id)}>Save</button>\r\n            </li>\r\n        )\r\n    } else {\r\n        return (\r\n            <li>\r\n                <label htmlFor={id} className={todo.complete ? \"active\" : \"\"}>\r\n                    <input type=\"checkbox\" id={id} checked={todo.complete}\r\n                        onChange={() => checkComplete(id)} />\r\n                    {todo.name}\r\n                </label>\r\n                <button disabled={todo.complete} onClick={handleOnEdit}>Edit</button>\r\n            </li>\r\n        )\r\n    }\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,eAAe,SAASC,QAAQ,OAA+C;EAAA;EAAA,IAA9C;IAAEC,IAAI;IAAEC,EAAE;IAAEC,aAAa;IAAEC;EAAgB,CAAC;EACzE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAACE,IAAI,CAACQ,IAAI,CAAC;EAErD,MAAMC,YAAY,GAAG,MAAM;IACvBJ,SAAS,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMK,UAAU,GAAGT,EAAE,IAAI;IACrBI,SAAS,CAAC,KAAK,CAAC;IAChB,IAAIC,SAAS,EAAE;MACXH,eAAe,CAACG,SAAS,EAAEL,EAAE,CAAC;IAClC,CAAC,MAAM;MACHM,YAAY,CAACP,IAAI,CAACQ,IAAI,CAAC;IAC3B;EACJ,CAAC;EAED,IAAIJ,MAAM,EAAE;IACR,oBACI;MAAA,wBACI;QAAO,IAAI,EAAC,MAAM;QAAC,EAAE,EAAC,WAAW;QAAC,KAAK,EAAEE,SAAU;QAC/C,IAAI,EAAC,WAAW;QAChB,QAAQ,EAAEK,CAAC,IAAIJ,YAAY,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eAEjE;QAAQ,OAAO,EAAE,MAAMJ,UAAU,CAACT,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QACnD;EAEb,CAAC,MAAM;IACH,oBACI;MAAA,wBACI;QAAO,OAAO,EAAEA,EAAG;QAAC,SAAS,EAAED,IAAI,CAACe,QAAQ,GAAG,QAAQ,GAAG,EAAG;QAAA,wBACzD;UAAO,IAAI,EAAC,UAAU;UAAC,EAAE,EAAEd,EAAG;UAAC,OAAO,EAAED,IAAI,CAACe,QAAS;UAClD,QAAQ,EAAE,MAAMb,aAAa,CAACD,EAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG,EACxCD,IAAI,CAACQ,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACN,eACR;QAAQ,QAAQ,EAAER,IAAI,CAACe,QAAS;QAAC,OAAO,EAAEN,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QACpE;EAEb;AAEJ;AAAC,GAxCuBV,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}